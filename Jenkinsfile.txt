pipeline{
    agent any
    tools{
        maven 'MAVEN3.9'
        jdk 'JDK17'
    }

    stages{
        stage('Fetchh code'){
            steps{
                echo 'Fetching code'
                git  branch: 'atom',url: 'https://github.com/hkhcoder/vprofile-project.git'
            }
        }
        stage('Build'){
            steps{
                echo 'Deploying....'
                sh 'mvn install -DskipTests'
            }
            post{
                success{
                    echo"archive Artifacts"
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        stage('Unit Test'){
            steps{
                echo 'Testing..'
                sh 'mvn test'
            }
        }

        stage('Check style analysis'){
            steps{
                echo 'Check style analysis'
                sh 'mvn checkstyle:checkstyle'
            }

        }
        stage('Sonar code analysis'){
            environment{
                scannerHome = tool 'sonar6.2'
            }
            steps{
                echo 'Sonar code analysis'
                withSonarQubeEnv('sonarserver'){
                    sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
                        -Dsonar.projectName=vprofile \
                        -Dsonar.projectVersion=1.0 \
                        -Dsonar.source=src/ \
                        -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
                        -Dsonar.junit.reportsPath=target/surefire-reports/ \
                        -Dsonar.jacoco.reportsPaths=target/jacoco.exec \
                        -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
                }
            }
        }
        stage("Quality gate"){
            steps{
                timeout(time: 1, unit: 'HOURS'){
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage("uploadartifacts to nexus"){
            steps{
                echo 'Storing artifacts to nexus'
                nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: '10.0.2.212:8081',
                    groupId: 'QA',
                    version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
                    repository: 'vprofile-repo',
                    credentialsId: 'nexuslogin',
                    artifacts: [
                        [artifactId: 'vproapp',
                        classifier: '',
                        file: 'target/vprofile-v2.war',
                        type: 'war']
                    ]
                )
            }
        }
    }
}